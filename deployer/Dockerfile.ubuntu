FROM gcr.io/google-appengine/debian9 AS build

RUN apt-get update && apt-get install -y --no-install-recommends gettext

# Handle custom arguments
ADD schema.yaml /tmp/schema.yaml

# Provide registry prefix and tag for default values for images.
ARG REGISTRY
ARG TAG
RUN cat /tmp/schema.yaml | env -i "REGISTRY=$REGISTRY" "TAG=$TAG" envsubst > /tmp/schema.yaml.new && mv /tmp/schema.yaml.new /tmp/schema.yaml

#FROM gcr.io/google-marketplace-tools/k8s/deployer_envsubst
#FROM gcr.io/google-appengine/debian9
#FROM gcr.io/google-appengine/ubuntu-php-base
FROM launcher.gcr.io/google/ubuntu16_04:latest

COPY config/storageclass.yaml /tmp/storageclass.yaml
COPY config/serviceaccount.yaml /tmp/serviceaccount.yaml
COPY config/clusterrole.yaml /tmp/clusterrole.yaml
COPY config/clusterrolebinding.yaml /tmp/clusterrolebinding.yaml
COPY config/deployment.yaml /tmp/deployment.yaml
#COPY config/pvc.yaml /tmp/pvc.yaml
COPY --from=build /tmp/schema.yaml /data/
COPY deploy.sh /tmp/deploy.sh

#COPY manifest /data/manifest
#COPY apptest/deployer /data-test/

RUN apt-get update && apt-get install -y apt-utils less vim screen iputils-ping

# Install kubectl
RUN apt-get install -y apt-transport-https lsb-release
RUN curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
RUN touch /etc/apt/sources.list.d/kubernetes.list
RUN K8S_REPO="kubernetes-$(lsb_release -c -s)"; echo "deb http://apt.kubernetes.io/ $K8S_REPO main" | tee -a /etc/apt/sources.list.d/kubernetes.list
RUN apt-get update && apt-get install -y kubectl

# Install gcloud
RUN CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"; echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
RUN apt-get update && apt-get install -y google-cloud-sdk

#ENTRYPOINT ["/bin/bash", "/tmp/deploy.sh"]
#ENTRYPOINT ["tail", "-f", "/dev/null"]
#ENTRYPOINT ["sh", "-c", "tail", "-f", "/dev/null"]
CMD tail -f /dev/null

